{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","OnSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC7B,OACC,qBAAKC,UAAY,kDAAjB,SACC,gCACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,6BAAKF,IACL,4BAAIC,UCYQK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIMC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAEhC,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,oCACfW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCAI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,YAAaC,OAAQ,SAA/D,SACEJ,EAAMK,YC4CKC,G,wDAxCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAQvC,WACC,MAA8BC,KAAKN,MAA5BvB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACTyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEtD,OAAQjC,EAAOmC,OAIb,sBAAKvC,UAAW,KAAhB,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ8B,SAPlB,+C,GA1BcM,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79db3a71.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\nreturn (\n\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow shadow-5'>\n\t\t<div>\n\t\t\t<img alt='Robot' src={`https://robohash.org/${id}?200x200`}/>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t</div>\n\t</div>\n\t);\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\trobots.map((user,i)  => {\n\t\t\t\treturn <Card \n\t\t\t\tkey={i} \n\t\t\t\tid={robots[i].id} \n\t\t\t\tname={robots[i].name} \n\t\t\t\temail={robots[i].email}/>\n\n\t\t\t})\n\t\t}\t\n\t\t</div>\n\t);\n}\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue ' \n\t\t\t\t\ttype='search' \n\t\t\t\t\tplaceholder='search robots' \n\t\t\t\t\tonChange={searchChange} />\n\t\t</div>\n\t\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\n\treturn(\n\t\t<div style={{overflowY: 'scroll', border: '1px solid', height: '450px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t\t);\n\n}\nexport default Scroll;","import React, { Component }from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport { robots } from '../robots';\nimport  Scroll  from '../components/Scroll';\nimport './App.css';\n\n\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots: users}))\n\t}\n\n\tOnSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value})\n\n\t}\n\n\trender() {\n\t\tconst {robots, searchfield} = this.state\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t})\n\t\treturn !robots.length ?\n\t\t\t <h1> Loading </h1>\n\t\t:\n\t\t\t ( \n\t\t\t\t<div className ='tc'>\n\t\t\t\t<h1 className='f1'>Robo Friends</h1>\n\t\t\t\t<SearchBox searchChange={this.OnSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\n\n\t}\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}